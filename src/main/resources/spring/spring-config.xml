<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.simple">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>-->
        <!--<property name="ignoreResourceNotFound" value="true"/>-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:properties/env.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="globalRollbackOnParticipationFailure" value="false"/>-->
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- 缺省的异步任务线程池 -->
    <!--<task:annotation-driven scheduler="scheduler" executor="executor" proxy-target-class="true"/>-->
    <!--<task:executor id="executor" pool-size="10"/>-->
    <!--<task:scheduler id="scheduler" pool-size="10"/>-->

    <!--<task:scheduled-tasks scheduler="scheduler">-->
    <!--&lt;!&ndash;&lt;!&ndash;自动清理删除的关系 每天2点执行执行 &ndash;&gt;&ndash;&gt;-->
    <!--<task:scheduled ref="" method="" cron="0 0 2 * * ?"/>-->
    <!--&lt;!&ndash;&lt;!&ndash;自动清理删除的关系 每天2点30执行&ndash;&gt;&ndash;&gt;-->
    <!--<task:scheduled ref="" method="" cron="0 30 2 * * ?"/>-->
    <!--</task:scheduled-tasks>-->


    <!-- 线程池配置 -->
    <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="50"/>
        <!--  线程池维护线程的最大数量，默认为Integer.MAX_VALUE -->
        <property name="maxPoolSize" value="1000"/>
        <!-- 线程池所使用的缓冲队列，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE -->
        <property name="queueCapacity" value="20000"/>
        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
        <property name="keepAliveSeconds" value="300"/>
        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
        <property name="rejectedExecutionHandler">
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>